<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (CMVClaims_NEW)' inline='true' name='federated.1m1ysuh1xouv7115gnb2z0bw3w97' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CMVClaims_NEW' name='excel-direct.0lxxate0gat4qz14nugmk16nu0h0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\BG\finalproject\CMVClaims_NEW.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0lxxate0gat4qz14nugmk16nu0h0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AD10001:no:A1:AD10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='ClaimID' ordinal='0' />
            <column datatype='real' name='TotalPaid_End' ordinal='1' />
            <column datatype='integer' name='TotalReserves_End' ordinal='2' />
            <column datatype='real' name='TotalRecovery_End' ordinal='3' />
            <column datatype='real' name='IndemnityPaid' ordinal='4' />
            <column datatype='real' name='OtherPaid' ordinal='5' />
            <column datatype='string' name='ClaimantStatus_End' ordinal='6' />
            <column datatype='date' name='IncidentDate' ordinal='7' />
            <column datatype='string' name='IncidentDescription' ordinal='8' />
            <column datatype='real' name='AverageWeeklyWage' ordinal='9' />
            <column datatype='date' name='ClaimOpenedDate' ordinal='10' />
            <column datatype='date' name='ClaimClosedDate' ordinal='11' />
            <column datatype='date' name='EmployerNotificationDate' ordinal='12' />
            <column datatype='date' name='ClaimReceivedDate' ordinal='13' />
            <column datatype='integer' name='IsDenied' ordinal='14' />
            <column datatype='string' name='OSHAInjuryDescription' ordinal='15' />
            <column datatype='integer' name='ClaimantAge_at_DOI' ordinal='16' />
            <column datatype='string' name='Gender' ordinal='17' />
            <column datatype='string' name='ClaimantType' ordinal='18' />
            <column datatype='string' name='InjuryCause' ordinal='19' />
            <column datatype='string' name='InjuryNature' ordinal='20' />
            <column datatype='string' name='BodyPartRegion' ordinal='21' />
            <column datatype='string' name='BodyPart' ordinal='22' />
            <column datatype='real' name='BillReviewALE' ordinal='23' />
            <column datatype='real' name='Hospital' ordinal='24' />
            <column datatype='real' name='PhysicianOutpatient' ordinal='25' />
            <column datatype='real' name='Rx' ordinal='26' />
            <column datatype='integer' name='new_Weekday' ordinal='27' />
            <column datatype='integer' name='new_IsHighRisk' ordinal='28' />
            <column datatype='integer' name='data_close-date_received' ordinal='29' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ClaimID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ClaimID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ClaimID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalPaid_End</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalPaid_End]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalPaid_End</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalReserves_End</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalReserves_End]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalReserves_End</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovery_End</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalRecovery_End]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalRecovery_End</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IndemnityPaid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IndemnityPaid]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>IndemnityPaid</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OtherPaid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OtherPaid]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>OtherPaid</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ClaimantStatus_End</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ClaimantStatus_End]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ClaimantStatus_End</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncidentDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[IncidentDate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>IncidentDate</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncidentDescription</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IncidentDescription]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>IncidentDescription</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageWeeklyWage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageWeeklyWage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>AverageWeeklyWage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ClaimOpenedDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ClaimOpenedDate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ClaimOpenedDate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ClaimClosedDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ClaimClosedDate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ClaimClosedDate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmployerNotificationDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[EmployerNotificationDate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EmployerNotificationDate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ClaimReceivedDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ClaimReceivedDate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ClaimReceivedDate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsDenied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IsDenied]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>IsDenied</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OSHAInjuryDescription</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OSHAInjuryDescription]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>OSHAInjuryDescription</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ClaimantAge_at_DOI</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ClaimantAge_at_DOI]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ClaimantAge_at_DOI</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ClaimantType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ClaimantType]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ClaimantType</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InjuryCause</remote-name>
            <remote-type>130</remote-type>
            <local-name>[InjuryCause]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>InjuryCause</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InjuryNature</remote-name>
            <remote-type>130</remote-type>
            <local-name>[InjuryNature]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>InjuryNature</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BodyPartRegion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BodyPartRegion]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>BodyPartRegion</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BodyPart</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BodyPart]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>BodyPart</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BillReviewALE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BillReviewALE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>BillReviewALE</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hospital]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Hospital</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PhysicianOutpatient</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PhysicianOutpatient]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PhysicianOutpatient</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rx</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rx]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Rx</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_Weekday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_Weekday]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_Weekday</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_IsHighRisk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_IsHighRisk]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_IsHighRisk</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_close-date_received</remote-name>
            <remote-type>20</remote-type>
            <local-name>[data_close-date_received]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>data_close-date_received</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AD10001:no:A1:AD10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Weekly Wage' datatype='real' name='[AverageWeeklyWage]' role='measure' type='quantitative' />
      <column caption='Bill Review ALE' datatype='real' name='[BillReviewALE]' role='measure' type='quantitative' />
      <column caption='Body Part Region' datatype='string' name='[BodyPartRegion]' role='dimension' type='nominal' />
      <column caption='Body Part' datatype='string' name='[BodyPart]' role='dimension' type='nominal' />
      <column caption='Claim Closed Date' datatype='date' name='[ClaimClosedDate]' role='dimension' type='ordinal' />
      <column caption='Claim ID' datatype='integer' name='[ClaimID]' role='dimension' type='ordinal' />
      <column caption='Claim Opened Date' datatype='date' name='[ClaimOpenedDate]' role='dimension' type='ordinal' />
      <column caption='Claim Received Date' datatype='date' name='[ClaimReceivedDate]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='ClaimantAge at DOI' datatype='integer' name='[ClaimantAge_at_DOI]' role='dimension' type='ordinal' />
      <column caption='ClaimantStatus End' datatype='string' name='[ClaimantStatus_End]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;C&quot;' value='Closed' />
          <alias key='&quot;O&quot;' value='Opened' />
          <alias key='&quot;R&quot;' value='Reopened' />
        </aliases>
      </column>
      <column caption='Claimant Type' datatype='string' name='[ClaimantType]' role='dimension' type='nominal' />
      <column caption='Employer Notification Date' datatype='date' name='[EmployerNotificationDate]' role='dimension' type='ordinal' />
      <column caption='Incident Date' datatype='date' name='[IncidentDate]' role='dimension' type='ordinal' />
      <column caption='Incident Description' datatype='string' name='[IncidentDescription]' role='dimension' type='nominal' />
      <column caption='Indemnity Paid' datatype='real' name='[IndemnityPaid]' role='measure' type='quantitative' />
      <column caption='Injury Cause' datatype='string' name='[InjuryCause]' role='dimension' type='nominal' />
      <column caption='Injury Nature' datatype='string' name='[InjuryNature]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Is Denied' datatype='integer' name='[IsDenied]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Approved' />
          <alias key='1' value='Denied' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='OSHA Injury Description' datatype='string' name='[OSHAInjuryDescription]' role='dimension' type='nominal' />
      <column caption='Other Paid' datatype='real' name='[OtherPaid]' role='measure' type='quantitative' />
      <column caption='Physician Outpatient' datatype='real' name='[PhysicianOutpatient]' role='measure' type='quantitative' />
      <column caption='TotalPaid End' datatype='real' name='[TotalPaid_End]' role='measure' type='quantitative' />
      <column caption='TotalRecovery End' datatype='real' name='[TotalRecovery_End]' role='measure' type='quantitative' />
      <column caption='TotalReserves End' datatype='integer' name='[TotalReserves_End]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='new IsHighRisk' datatype='integer' name='[new_IsHighRisk]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Low Risk' />
          <alias key='1' value='High Risk' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='new Weekday' datatype='integer' name='[new_Weekday]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Sunday' />
          <alias key='2' value='Monday' />
          <alias key='3' value='Tuesday' />
          <alias key='4' value='Wednesday' />
          <alias key='5' value='Thursday' />
          <alias key='6' value='Friday' />
          <alias key='7' value='Saturday' />
        </aliases>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.632143' measure-ordering='alphabetic' measure-percentage='0.367857' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='%High Risk Claims'>
      <layout-options>
        <title>
          <formatted-text>
            <run>%High Risk Claims&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The percentage of the high risk claims are less as expected</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CMVClaims_NEW)' name='federated.1m1ysuh1xouv7115gnb2z0bw3w97' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1ysuh1xouv7115gnb2z0bw3w97'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='new IsHighRisk' datatype='integer' name='[new_IsHighRisk]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Low Risk' />
                <alias key='1' value='High Risk' />
              </aliases>
            </column>
            <column-instance column='[new_IsHighRisk]' derivation='None' name='[none:new_IsHighRisk:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[pcto:cnt:Number of Records:qk:3]' />
              <color column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]' />
              <text column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]' />
              <text column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[pcto:cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Avg Processing Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg Processing Time(days)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontname='Times New Roman'>A steady decrease in the processing time for both  high and low risk claims is observed.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CMVClaims_NEW)' name='federated.1m1ysuh1xouv7115gnb2z0bw3w97' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1ysuh1xouv7115gnb2z0bw3w97'>
            <column caption='Claim Closed Date' datatype='date' name='[ClaimClosedDate]' role='dimension' type='ordinal' />
            <column-instance column='[data_close-date_received]' derivation='Avg' name='[avg:data_close-date_received:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[data_close-date_received]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='new IsHighRisk' datatype='integer' name='[new_IsHighRisk]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Low Risk' />
                <alias key='1' value='High Risk' />
              </aliases>
            </column>
            <column-instance column='[new_IsHighRisk]' derivation='None' name='[none:new_IsHighRisk:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ClaimClosedDate]' derivation='Year' name='[yr:ClaimClosedDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[yr:ClaimClosedDate:ok]'>
            <groupfilter from='2005' function='range' level='[yr:ClaimClosedDate:ok]' to='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[yr:ClaimClosedDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[avg:data_close-date_received:qk]</rows>
        <cols>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[yr:ClaimClosedDate:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='ClaimantStatus Vs AVG(TotalPaid)'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>The average total paid for the reopened claims is very high.To reduce the cost the reopening of these cases should be avoided.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CMVClaims_NEW)' name='federated.1m1ysuh1xouv7115gnb2z0bw3w97' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1ysuh1xouv7115gnb2z0bw3w97'>
            <column caption='ClaimantStatus End' datatype='string' name='[ClaimantStatus_End]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;C&quot;' value='Closed' />
                <alias key='&quot;O&quot;' value='Opened' />
                <alias key='&quot;R&quot;' value='Reopened' />
              </aliases>
            </column>
            <column caption='TotalPaid End' datatype='real' name='[TotalPaid_End]' role='measure' type='quantitative' />
            <column-instance column='[TotalPaid_End]' derivation='Avg' name='[avg:TotalPaid_End:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ClaimantStatus_End]' derivation='None' name='[none:ClaimantStatus_End:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ClaimantStatus_End:nk]' member='&quot;C&quot;' />
              <groupfilter function='member' level='[none:ClaimantStatus_End:nk]' member='&quot;R&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]' value='95' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[avg:TotalPaid_End:qk]</rows>
        <cols>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='HighRisk Claim Vs ClaimantStatus'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CMVClaims_NEW)' name='federated.1m1ysuh1xouv7115gnb2z0bw3w97' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1ysuh1xouv7115gnb2z0bw3w97'>
            <column caption='ClaimantStatus End' datatype='string' name='[ClaimantStatus_End]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;C&quot;' value='Closed' />
                <alias key='&quot;O&quot;' value='Opened' />
                <alias key='&quot;R&quot;' value='Reopened' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='new IsHighRisk' datatype='integer' name='[new_IsHighRisk]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Low Risk' />
                <alias key='1' value='High Risk' />
              </aliases>
            </column>
            <column-instance column='[ClaimantStatus_End]' derivation='None' name='[none:ClaimantStatus_End:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_IsHighRisk]' derivation='None' name='[none:new_IsHighRisk:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]'>
            <groupfilter function='member' level='[none:new_IsHighRisk:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[pcto:cnt:Number of Records:qk]</rows>
        <cols>([federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok] / [federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='HighRisk Claim Vs IsDenied'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Either the scrutiny of the high risk claims should be more or the classification parameters for the high risk claims should be altered.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CMVClaims_NEW)' name='federated.1m1ysuh1xouv7115gnb2z0bw3w97' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1ysuh1xouv7115gnb2z0bw3w97'>
            <column aggregation='Sum' caption='Is Denied' datatype='integer' name='[IsDenied]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Approved' />
                <alias key='1' value='Denied' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='new IsHighRisk' datatype='integer' name='[new_IsHighRisk]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Low Risk' />
                <alias key='1' value='High Risk' />
              </aliases>
            </column>
            <column-instance column='[IsDenied]' derivation='None' name='[none:IsDenied:ok]' pivot='key' type='ordinal' />
            <column-instance column='[new_IsHighRisk]' derivation='None' name='[none:new_IsHighRisk:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='RowInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]'>
            <groupfilter function='member' level='[none:new_IsHighRisk:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:IsDenied:ok]' value='101' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:IsDenied:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[pcto:cnt:Number of Records:qk:6]</rows>
        <cols>([federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok] / [federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:IsDenied:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Highest avg processing time vs injury nature'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>These injury natures take the most processing time. A better scrutiny process should be introduced to increase the productivity</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CMVClaims_NEW)' name='federated.1m1ysuh1xouv7115gnb2z0bw3w97' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1ysuh1xouv7115gnb2z0bw3w97'>
            <column caption='Injury Nature' datatype='string' name='[InjuryNature]' role='dimension' type='nominal' />
            <column-instance column='[data_close-date_received]' derivation='Avg' name='[avg:data_close-date_received:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[data_close-date_received]' role='measure' type='quantitative' />
            <column-instance column='[InjuryNature]' derivation='None' name='[none:InjuryNature:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([data_close-date_received])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;AIDS&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Amputation&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Angina Pectoris&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Asbestosis&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Asphyxiation&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Black Lung&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Burn&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Cancer&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Carpal Tunnel Syndrome&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Concussion&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Contagious Disease&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Contusion&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Crushing&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Dermatitis&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Dislocation&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Dust Disease, NOC&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Electric Shock&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Foreign Body&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Fracture&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Freezing&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Hearing Loss Or Impairment&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Heat Prostration&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Hernia&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Infection&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Inflammation&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Laceration&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Loss of Hearing&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Mental Disorder&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Mental Stress&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Multiple Injuries Including Both Physical and Psychological&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Multiple Physical Injuries Only&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Myocardial Infarction&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;No Physical Injury&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Non-Standard Code&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Not Available&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Poisoning?Chemical (Other Than Metals)&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Poisoning?General (NOT OD or Cumulative Injury)&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Poisoning?Metal&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Puncture&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Radiation&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Respiratory Disorders&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Rupture&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Severance&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Silicosis&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Sprain&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Strain&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Syncope&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Vascular&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;VDT-Related Disease&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Vision Loss&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]' direction='DESC' using='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[avg:data_close-date_received:qk]' />
          <slices>
            <column>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]' value='81' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[avg:data_close-date_received:qk]</rows>
        <cols>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Most reopened claims vs injury nature'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Reopened claims takes additional processing time therefore amends should be made to avoid them. These are the top 5 injury nature whose claims reopen the most.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CMVClaims_NEW)' name='federated.1m1ysuh1xouv7115gnb2z0bw3w97' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1ysuh1xouv7115gnb2z0bw3w97'>
            <column caption='ClaimantStatus End' datatype='string' name='[ClaimantStatus_End]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;C&quot;' value='Closed' />
                <alias key='&quot;O&quot;' value='Opened' />
                <alias key='&quot;R&quot;' value='Reopened' />
              </aliases>
            </column>
            <column caption='Injury Nature' datatype='string' name='[InjuryNature]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ClaimantStatus_End]' derivation='None' name='[none:ClaimantStatus_End:nk]' pivot='key' type='nominal' />
            <column-instance column='[InjuryNature]' derivation='None' name='[none:InjuryNature:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]'>
            <groupfilter function='member' level='[none:ClaimantStatus_End:nk]' member='&quot;R&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;AIDS&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Amputation&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Angina Pectoris&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Asbestosis&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Asphyxiation&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Black Lung&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Burn&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Cancer&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Carpal Tunnel Syndrome&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Concussion&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Contagious Disease&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Contusion&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Crushing&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Dermatitis&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Dislocation&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Dust Disease, NOC&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Electric Shock&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Foreign Body&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Fracture&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Freezing&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Hearing Loss Or Impairment&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Heat Prostration&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Hernia&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Infection&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Inflammation&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Laceration&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Loss of Hearing&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Mental Disorder&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Mental Stress&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Multiple Injuries Including Both Physical and Psychological&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Multiple Physical Injuries Only&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Myocardial Infarction&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;No Physical Injury&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Non-Standard Code&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Poisoning?Chemical (Other Than Metals)&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Poisoning?General (NOT OD or Cumulative Injury)&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Poisoning?Metal&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Puncture&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Radiation&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Respiratory Disorders&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Rupture&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Severance&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Silicosis&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Sprain&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Strain&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Syncope&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Vascular&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;VDT-Related Disease&quot;' />
                  <groupfilter function='member' level='[none:InjuryNature:nk]' member='&quot;Vision Loss&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]' direction='DESC' using='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[cnt:Number of Records:qk]' />
          <slices>
            <column>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]</column>
            <column>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]' value='116' />
            <format attr='width' field='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]' value='122' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[pcto:cnt:Number of Records:qk]</rows>
        <cols>([federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk] / [federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Re-open Vs IsDenied'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>A very high percentageof re-opened cases are eventually approved. To reduce the cost and time the reopening should be avoided by approving the cases beforehand(if possible)</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CMVClaims_NEW)' name='federated.1m1ysuh1xouv7115gnb2z0bw3w97' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1ysuh1xouv7115gnb2z0bw3w97'>
            <column caption='ClaimantStatus End' datatype='string' name='[ClaimantStatus_End]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;C&quot;' value='Closed' />
                <alias key='&quot;O&quot;' value='Opened' />
                <alias key='&quot;R&quot;' value='Reopened' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Is Denied' datatype='integer' name='[IsDenied]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Approved' />
                <alias key='1' value='Denied' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[ClaimantStatus_End]' derivation='None' name='[none:ClaimantStatus_End:nk]' pivot='key' type='nominal' />
            <column-instance column='[IsDenied]' derivation='None' name='[none:IsDenied:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:IsDenied:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]'>
            <groupfilter function='member' level='[none:ClaimantStatus_End:nk]' member='&quot;R&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[pcto:cnt:Number of Records:qk:7]' />
              <text column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:IsDenied:ok]' />
              <color column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:IsDenied:ok]' />
              <text column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[pcto:cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekday Vs %Count'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>We can observe that number of incidents occured were highest during the start of the week increasing gradually from Monday to Wednesday. This may account for the high workload at  start of the week which is a general scenario in most of the workplaces.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CMVClaims_NEW)' name='federated.1m1ysuh1xouv7115gnb2z0bw3w97' />
          </datasources>
          <datasource-dependencies datasource='federated.1m1ysuh1xouv7115gnb2z0bw3w97'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='new Weekday' datatype='integer' name='[new_Weekday]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Sunday' />
                <alias key='2' value='Monday' />
                <alias key='3' value='Tuesday' />
                <alias key='4' value='Wednesday' />
                <alias key='5' value='Thursday' />
                <alias key='6' value='Friday' />
                <alias key='7' value='Saturday' />
              </aliases>
            </column>
            <column-instance column='[new_Weekday]' derivation='None' name='[none:new_Weekday:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_Weekday:ok]'>
            <groupfilter from='1' function='range' level='[none:new_Weekday:ok]' to='7' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_Weekday:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_Weekday:ok]' value='71' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_Weekday:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[pcto:cnt:Number of Records:qk]</rows>
        <cols>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_Weekday:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows pres-mode='true' source-height='44'>
    <window class='worksheet' name='%High Risk Claims'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='137'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='HighRisk Claim Vs IsDenied'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:IsDenied:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='137'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:IsDenied:ok]</field>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg Processing Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='137'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]</field>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[yr:ClaimClosedDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Re-open Vs IsDenied'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:IsDenied:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='137'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]</field>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:IsDenied:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ClaimantStatus Vs AVG(TotalPaid)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='137'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='HighRisk Claim Vs ClaimantStatus'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='137'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]</field>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Highest avg processing time vs injury nature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='137'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]</field>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_IsHighRisk:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Most reopened claims vs injury nature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='137'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:ClaimantStatus_End:nk]</field>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:InjuryNature:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Weekday Vs %Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_Weekday:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='137'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m1ysuh1xouv7115gnb2z0bw3w97].[none:new_Weekday:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='%High Risk Claims' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Avg Processing Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ClaimantStatus Vs AVG(TotalPaid)' width='192'>
      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
      UCMb/CP/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='HighRisk Claim Vs ClaimantStatus' width='192'>
      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
      Em1onm4aB6ws2lxO4oXSGV/Mhg2tPH/kDd4YzSNOCjLY20M0rZQ5uSmY3ir/GkrITeO5RoKW
      DPKyEjEAmmyjaEExL1bvYv9oAoH+QZIz55HsvN6rgITb1bTpHDcy1sDevXX4rvGZpNNTuPQu
      SpIAFHyDHdSda6TXHUQ2ucifv5jZKZYrjs4RhptOUV3fS1DT4UidRcmcQlIcl754TUPxj9LS
      2okaP4uizAvPBTSUsJfO2pPUdU/cBp1XUkDSdV7adlt3jhvDJEmSpk0ApjMRgNuT6B1aiHki
      AEJMEwG4ibSIj7od/8ajaxcye1YeBSXLePRrP+d0jxdFvVATVWjZ8wyPLUkiIzuX3NwLf8Ws
      f+jbnLj+3FHCbs69+gM+edcSZufnUVSygk/95DAjgYuvwFbCPoaa9/GDz7+fRXMLyc3LZ+7S
      O/nCky9SNxSYuH2sBDj93GdYOruA2RWb+PzTO+kKXHzPl9s7zoa/2c74VO2om0kTplxLS4vm
      8YxqfTv/SquqfK/21O52zRcKa8N127WvP7pe2/zZZ7T6kaCmqpqmqW7t6G+/pX3pi9/Rjg69
      g4VEfVrd9qe1x+9/SPvH3x7TRoNhzVf/vPanGyu0R/+9WvNENU3TVK1919PaJx55SPviD3Zq
      LSN+TY0GtJ4TW7W/euQ+7RPf2qq1+VQtUPOkdsfaz2qvdvm0kdqXtb/77F9q3912TguqE/MY
      qfsv7ZWBqdhTNxeIM8BN1MNvv7Od+V99ms+szcFqNJBQvIUv/J8Pk3B8Ky82jk6MFvUxOjyO
      Zk4j4R28rigy1sXR/YcwVX6IJ+5dRLzJgHX2/Xz9Hx/H98L3eaNfBTTU+AV8+ptP8vWPbmSW
      y4KkM5M+/w7e/+ACol21dPWHqX/lDxgf/hSbM624iheyoigFd9M5+iJAoJWXnt7JHclTsY9u
      PhGAm6aZs2dzWL4s8bKhltL13Fk4xL6DPWhoaD4vI6PjkJZO4qSf0miMjwzSOuhl9uJKMi5p
      cmSbvYUlSWc5VuMBZPIWVFGen4n50lYZShCvN4gmmzAYoL+/n9TU1InPZAt2m45o1EsgGKLx
      5Wc4mPT4u9gPt5dp8yBs+nMQH99HY6MfEi99xXsa5RXJ/EtDE2gLiPj8DLZWs6ulh0D975DR
      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
    </thumbnail>
    <thumbnail height='192' name='HighRisk Claim Vs IsDenied' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Highest avg processing time vs injury nature' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most reopened claims vs injury nature' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO3dd3QUV57o8W91zpJaWSIJCYFAImcw0WCcZh3WaWzj8djjmZ2443nzZna8
      89aTfDxvbY/Hbxx2dh3WGYd1wNgYMNgkkxFCCKGEhHLs3OpUXe8PYZtkqTESQq37OUfn0E11
      9a3q+tW9VXXv70qKoigIwjClGuwCCMJgEgEgDGsiAIRhTQTAcObvYOPOg2e/H2jlL488R/d5
      ri4ccLFhwwZkRaG9ppSj9Z1nLVNzaDc1re5vVt4BIAJgOPN3sGFHMXLYzeGScnZ9tonS6iYw
      JLBsxQK0IRelZcdBDrDvYCkEnBw6dpyyg7s4uH8vTc4gcjhA8aFSogpEgi6ef+xFjrX5aT9e
      ytH6LoJ+J59tXM+2fUcId7v54H9e583/eY/S6iYqSw/hj0Bj1RGanV5KSkrpaKikrKaFgKuV
      jz9aT0Ond0B3gQgAgXCgjSce/gu1LS088cR/EsHL++9vIdzdyvqNeyHiY807H4Gnib888u98
      cqAaPA2sWbedrpo9bDvSinRyXbPGJbHu7bXIJ183VZXR4vaz7c1n2FbpAEBRFBQFtq1fizMM
      pTvWU97cyQdv/jfPvfQewaCXR/78f3F4HDz28GN45XMWu1+IABAAyJ+1lFtvuY5snZpQL8ul
      58/in+7+NlMXXo7v2E62bD/IvAWzkE5GgCl9PKM1zRxr7mnm+P0+orJCUqIZV0CiIC+HmQuX
      U5SXdY61W7j3n3/G+HQtXT4wGy2kWkM4fP2+uV8SASB8PUlNQ/leXn/9Deq7epoiFpsNjUpC
      0liZMc7M+jI/U0bZTv0Ql69YxKYN2wDYv3Mb3mCYltZ2FCDBZuSzDR9QUtmIHHay7p032bDt
      cM9HDWZsOg16s51Eo0J3JMqY3Hx0A3iUqh988MEHB271wiVNpSUpOZkRGekkJtpJS7OTmGQn
      PUXH5u3HWLliOSPSjNiyC5g7dSIjRmSTmGQnIyURgKi/lWjiRGZNHAWApNJgs9sZMb6QERnJ
      5OaNY+aMKXjcfpasWMmIzEwmFE5GF3RiSc1m7qxpeDxhlq9cyoisbEakp5CekYZarWPWrCm0
      NLWQPW4q40Ykf1nD9DfpUnkS3N7ejjRQWynETolSvGMTbepMVs4r+trFvB31fPzZPhYsX0VG
      ovEiFrB/XTIB0NHRQUpKymAXQxhmxDWAMKyJABCGNREAwrAmAkAY1kQACMOaCABhWBMBIAxr
      IgCEYU0z2AX4pkKeFv78x8e5698extBczNsbdxMMRLjlnvvItGoBKN21iX3lDUCQZo+V7145
      gXe3HECKBMmdtYLxhnbe/ewQ05dcw/yCZN77YCfXfmuFOCsMI0M2AD5Z9yFJSTb8EdjxyQ5u
      /u4PMbsO8/QbG/j5PVcDUDj3cgrnQuXWNynVzyQtdwz35U5DiTh4/On3aE2S+N737+C1lzeg
      qZcYP2eVOPiHmSH5e7dX7cJlKyI31QRAgkniwMHDNHRJuNqqTltWiXSz6VA7V8wYjaRE2PrR
      2zz0x78yc9kyko1qDhWXEJYDnOhw8/EbL/DK+58OwhYJg2XoBYAc4pmnX6Cz8TCbduxhw4bN
      XH7T3aRIXro8DuxJmact3nx0J9bc2Zg0KlBpWXzVjfzgvjvZs+UTVnzrBohosVs0IGu44Xv3
      Eeo8ziXROUq4KPqpCaRQW15MfWc3GrWOKTNnIruaKT1Wg9aSzLTCcdSVl9LqhxnTigg7G+mK
      2hmZaj7/r1Jp+ddHngZgvcpNzsqldDaU0ubupqWyjKXXrqb1yE4Oh7O4fHIW720s4faf/jMA
      R/duobozgkEKYrQmoNKZSdZ6cObMYJKmnvVrP0DWJPTPLhGGhP7pDaoo7N25k8lz56NXS4DC
      9i2fMG3BUlqP7iaSOJIuh5ex1hBu8yjc9TUUzZiOVvVV9+dv0hvU73GhNScgRbppaWlDb7WT
      kmglEvDSrWixGTW43H4SEqwAyOEALS1tRFCTkZGBXqvG73WjNVrQqqC1qQmzPQ2LUXfBu0QY
      GvopAKLs2/kZQXTIKiPz5xay/dM9LFm6kEBbBfubIhAKM8ISoTOiJ+TzEAxHmDhtNnaTBkVR
      6OzsxG6398MmCULs+qcJJKmYuWApiqLQUbGLIw3dSJKCAoTDEXQmO+Myg5xo9yCpVICeRTNz
      2FXRzNwpowFQq9VoNKcXx+MPcaLV1S9FvFDjRtrRadSDXQyhn/VLACjREKUlR0nPyqS60c3Y
      ORakJoXKuka6alvJm5lHgkmDunEfowqmUHlwP/VNbZhtmaeNAjtzRNjRug4eenlbfxTxgj19
      /9VkpVgHuxhCP+uXu0CSSkte7ijcLhf5MxaSblZTOHMuBrmbsZNnkmzuaVNnjc0nwahn6rQi
      Ilo7k8aIEWDC4Oqnu0ASRmsSedakL99RqXWMGpt3yiIqkhJ7BlNrjVbGjhZnU2HwDb3nAILQ
      j0QACMOaCABhWDuvAFCiUS6RLCqC0C/6vghWFDa++RIZMxey6fWXITmXH937bXRqkcRKGPpi
      qAEUdhYfwlm5h3DWbLrqDuDyhwe+ZIJwEcQQABJLZk1kzbp9rFw4DqMpHbNBO/AlE4SLoNcm
      UDQqEwqFmXPl7cy5sue9Cb/8GfohO4xGEE7X66Hsqj/CUy+/T1nxQUYWTMaiUzhc4+A/nnyE
      RKOoBYShr9cmUNLoyTzwm98wKX8M9/74fh74l9+Ql6ZDjl6s4gnCwIqhMSNxzYr5PP6Hf8Wo
      BfPIGVgMog0kxIeYjmTZOop/f/RRDNqe7sAij78QL2J6ENZweCcbdh9FjkaJiodhQhyJoQZQ
      CEcjfPjCE+zblI3ams79P7oXm7gIFuJATNcAV998N5bULbT54LKly7GKawAhTsTUBFrz98dp
      U6UwbVwajz3yGN6QuA0kxIeYukK0OrxMnTKFgslT0YTdhCPiGkCIDzE1gVbfvZqnnn6YYASW
      3vw9kkxicLgQH2JqzDc3OfjB//430i1qPtu8jXB0IjoRA0IciKkJtPbDdUSiIElqNn3ygegN
      KsSNmJpAl8+byBOPPsrIJNBnziDBJG6BCvGh7wCQJOZedQfJY8sIqUykpqSdltJQEIayvptA
      isKWt57jxTXvsPPocf722J/xiNugQpyIbUTYoQq+c889ZCZZCIW7CYXlgS+ZIFwEMV0D3HTd
      Kv7ryb/i9gWZuvgfSDSd+2PRSAhvdxib1YwSlXG7XGgMFkxGHeFuH90RsFnMEA0TkiX0OvFE
      WRhcfR6BCgr2MVP5w0PLUaskykqLCQQjWM7RF6jqyG4O1IS59fplVBTvxq224WlvY/rcWZQV
      lyApUfKmzcZ9/BCGEZPJFgEgDLLej0AlzAt//i31kh2nK8Ll0zPY06Dh1wVTz1rU31mPS2Un
      3eYCZJrcYZYsLsTTUEp5dQOaxDTyrQFOtDQjy0YkdwdyQjZqcUEtDKLeAyDoZU+bmr89+kue
      +rcfUuqexL/8+Fr0mtMvHRRFprT8BIWzp7G7rRiIIClqJAl0ej1htQazv5mDnVESbBF8Hh/J
      5ihHavVMGm1HURRkWSYcPv35gixH+nt7v7FIJHJW+YShr48aQCHirOPhhx6irLyZ9PABHnmy
      nZ/cd9dp3aGVbgedbh/Fe/dxvLaW0Y3jUBMirEBXl5tkex4TCnPoaqyiCyvhQCMjs9NprPCi
      VqcCPfMDaLWnN6vU6kuniaTRaM4qnzD09X6EGZJ48un/Inpa3zcJ/RlpIVSmFK68ciUQwmiw
      MzY7lSRVDju3bkVlsDIv34aiyDR2+ikozEXna2PrvkomTZvd7xskCOej9wCQJHR6w3msTse0
      6YUAJGXmsDgz55T/U1M0eTIAo/KLGJV/niUVhAHQawB0VO7ioyoINx7k+tvuIcksJo8T4kuv
      AaCz2Ni79kkamuupbezEqFODJY0f33sXVuOl0z4XhG+q16PYllHAnx76Pa++9goLlqzCoNNi
      sdkw6UVfaCE+9HkNYE20s2hKDi++8go2vUJC7gK+f9sVF6l4gjCwYuoM9/baT7nv/l/x6wf+
      D/UH1+Hwhi5C0QRh4MXUF2j6hBGseeU1cpMhas09ZzcIQRiKYhoPsOr2HzK2vAx3N1xxfSEG
      jei+IMSHmG7lqDR6JhROG+iyCMJFF9M1wHtvvU6XT7T7hfgTU2KsEQka3nxvI97uAIFgUOQG
      FeJGTE2ghtZWOuqc/PWxYrCk8ZP7viNygwpxIYaLYFhxzY2wcTNJuUWEOx2YRG5QIU7EcA0A
      Lzz5F6KmZFo73Xz26fu4fJdOP31BuBAxXQOoJAnUKlytx3H5VWg0YoJ5IT70fSRLEqt/+DN8
      DRW4Olzc+9NfYBN9gYQ4EdNt0INb13O4tgvZ28qn2w8gkqII8SKmvEBb9xzln+7/Bb/8zW9p
      KvkYp0+MjRXiQ6+3c9zNlbyx7jP83X5efuE5Mmx6vIoZnVY0gYT40GsAGJMyWbFiBaxY8eV7
      K1Zp+Zq8WIIw5PR6KGsNFkaPMrPhjb+zq6oTvUYN5lR+eM+dWI3iTpAw9MU0S+SRihPc/N37
      GW03gSRh0IsqQIgPMY0HGJtq4NGH/0Sq1QDWTH71sx+IOQKEuBBTDVDe5OWB3/2R0UnGgS+R
      IFxEMdUAGTaJF597jqxEA5iSue3GazGLZpAQB2I6iq++4yf4gif7/6i1Z+UGFYShKqYA2LP1
      I47Wu0CJ4JWSuP9H38Wq/ioIFCVK6YFdeILgcXmYvWwFrqqD1HT4CIdkFiycw+G9u/EGFWYu
      vAxfXQlh+wRy0swDtmGCEIuYAmDJVTczPxJFiQb46+PPIKnOrAEkCqfPQ4lGKN+7DU8gQm2b
      hyVLluCsPURFTQNq+whmWQM0tLQSCujJ0clEFaWno50gDJKYAqB0/w5OtPtQlAi1ze2EwlHQ
      fRUEkiThc7Zy4EAJzrCRq2wK1YoGlQRmixm/B7TuRva1RElKidDt9nCi2o0urYD8LNuwSY/e
      7Wzmw/WbSRgzmctnjOG9/1mLo7tnqOmc5f9AwcikL5eNhl1s+OQgy1cuwdNSxYbNn2MbMYGV
      i2fRXl3M3mofV61cgOTvoLpTIX9U6gWVbbiKKQAyRoxBn9jzQy1cdvVZM8UrioIpIZ2FSy/H
      c6KY/dVe1KoIEQVcTg9JSTlMLMrF01FHk09DpFth8sRsdpU7UZ/80eM9PbqiKHy+az9X3HAr
      ZWufZnPKWG68fTUAH776DCqd4av1K1E+fusdPq9ysWTVCjpdAW68fTXHtr/F2k8NeOtLmTMp
      g11HGglV76Bg+Q0idfs31PsRFvLxwrPPcKLd1/NaidIVMfDgr39BovmUHa4E2LNtL7JWQzgU
      YfLcRILqNLZt3Yoi6Zg/3wZEqa7rYNK06dR5Wti65yh5RcMnPbokSVxx7fWE/E4qWkPMSzEh
      SRLRQCdVDgNXZFu/XLb9+CEc1vHkJhUDUDBpIrXVFZRWdTFxSTqlLVqsVivHKg/jC2ro/Hgd
      y668hoyE88nkLUBfAaA1cce9PyWqKLTWlrLm7Y/IGDcRg+70GkBSGZmzeNHpn82ZSEbO6W9N
      mzkTgHFFMxl3wUUfelzNx/ivl9ay7IbVTEjtybT9+do3mXn1t9F8cS2khFi3YQ/X3X0Pb/9n
      TwAocpAT9Q2oDQZC4SiTc5LZcvAEarWBaMjPyuWz2bh1L3dce9lgbdqQ1UcbI0p95SE++OgT
      NClj+c6P/xfJFh2SuHA9b4qi8OLLb3P3T36J/WRCgbCvjV2teu7PsQFQX1VFarYdk83Eu6+9
      xI7du0kt2s+k7CTmL7mcjmO7+bC8gntuuBK9ej0eeyE1uzYCEiAydXwTfTSBvPznM/+BLms8
      6f4O3nz5OTAlc+ctN2ARA+PPk0Kq3cz7a14B4LJV/0gKHlauWsUXp5OGqiqseau4+dt3AgqT
      J05k0oypVO3fzms7t2FKzOTGVUsABZ86iRnjRzDWOIdNO8tYceU1g7RdQ5uk9JbkR1GIRCJE
      T11EktBqNP1eC3R0dJCSknLae7vLGnno5W39+j3f1NP3X01WirXvBYUhpc/06Bpxd0GIY70G
      QPuxHfx9Yy04jnHdbfeQZNKCWkt6aoqY37cXz39UzM7D9YNdDLJSrPzuu0sGuxiXtF4DIGnM
      FCZYD/Pq5kOEpVcx6XoGxPzTPXdiFdcAX8vjC9Lm9A12MTDoxG/Ul173kEZv4cbV32fyzNlU
      VFbjDKhZuHSZOPiFuBFTt87PP34XhzaNqeNSeeyRx/AERWIUIT7ElBal1eFl6pQpFEyeiibs
      JhwR95yF+BDTgJjVd6/mqacfJhiBpTd/76y+QIIwVMU0RVL62Kk8+McpJ1+Kuz9C/IgpNWI4
      9NXsMOFwCDE/hhAvYroG+MPvHqDNHQJF5sHf/opOMU2qECf66Avk4YnH/sy+AyU8+MAv0avB
      NnqKmCZViBu9B4DOyk9/9Qemzt3MjHmLRSYIIe7EdESrvS38v7/+Ba1aBeZU7vvOt8XDMCEu
      xJQYa8eeQ1z93Z8zMtEIkhqzTtwGFeJDTM8BshLUrPtwPXlpVjAkcPXKZRhFEAhxIKZ2zIJr
      vk2nJ9jzQmsUPUGFuBFTE+jQ7k8pqXVANEStQ8VfHv4tOpEdTogDMTwJVnHd6p9wHaBEw/zp
      978HSRz8QnzoOwAUhQ/ffPZkakSZjpAhti6kgjAExJwacYbHQ0iWSElNxSimSRXiRAzzBENd
      yWc8/uTfefn5Z3j+7c3Ioi/QsCKH/Ozae/DL1yeO7uOll16lts1z2nIhbwfvvPEGdR1eIiE/
      7695gRdeeIHP9h9D9nfw5hvv0OHtuZlyrLyc6EXdinOLqTPc22s/5b77f8WvH/g/1B9ch+Mc
      fYEiQT81VZU0tTkAiMohThyvps3hQQG8jjZONLWjKBANd+M+uSOES1zIyVtvvM/Hn24HwFVf
      zLu7Grn1lut4/4Wn6Dr5MyoRD88+9zrzV6xCGwngbT+G31TAXXfdxaLp+bz39rvMWzSZ99/f
      THPZZ1R2qrgU7iXG0JyXmD5hBGteeY23Xv9votbcs/oCKUqU8qNHMVhttFXs43hXkMN7Pieg
      MlB9aA/tDgeHyutwN1XT7O6morSEkCSaUUOCLpFb7riV0ak9KWF0JhvqkIva2uNoLcl88TjI
      UXsEt6Jj4wdrCUha/K3NFB/6nFffeJdmh48QahKsNpRuB7vLWug+sYeDFY2DuGE9YhoPsOr2
      HzK2vAx3N1xxfSEGjXTGIioKp85AUWRaKxQ0qiiOoMTk0dlkalwcqWtGY0kg2xqkrqUJJAMn
      qipJLJyARn0pnAeEWMlyFINWoq6uAZ3JjCIroJEIhQIYE0dyw3Vz+NvfX+YXv/gRD0+/Ck/7
      cZ56cQ33XDeHt9asw2LS4e9yMeGaG9n/4Vqm539nULen9xpA7ubxhx6mS9YyoXAas6aP5z/+
      +iie4Nmtt6DPwbbNn2AeM50RiWpQeqo4rVZDVGfGJrsoafQR9btxu33kZWoprmxBlmUikciX
      6dFP/bsU06PH8heNXgqtW1BQYi5zX39f/D7N1eVEE0excOFCFGcdTR0OjlVUkpidR6CjFl8g
      hCRJ1JQVU9fiICKHUanUJGSP5/or5hI1ZTA21fTlbx7qp/J907/eawA5RG1rF/ovz9JqOjpa
      CIZlrPrTZ4jZu3sfhXMWY7foAQWtFMIXkmlt7iI9s5DctFEk1hwlZMkgVFWN0WBADodRq3vq
      0HhKj646awKRwSEhXXDa9JCziTfe30h3dzevvPIO37r1GiYHP+X1NW8xadk/kptqZEt5I+Py
      l7D6hoVs2PApt921miSVl82bP8Yd0XH7HTeh1WrpcnWzfMl8kg1B3n9nLXOWrkI3yInX+uwO
      fcOiHH73+0e4bOZ46o/uJmncEhLPnCJVUVCUMOUl+0GSyC+czpTJBZTs24XOmsLUFDOKEsUT
      1pCbmoQxkMieI00UTp02gJsm9AddYhZ3rL7rtPfmLLmKOae8XrF8CQAZOUXcnlN08l0L1954
      62mfGzvxi9/bwPW33jEg5T1ffZxiVVx2ww+YMLuK0ooTLL7xBxTmjuDMYcGSSs1ly68647OZ
      zJufecprNfnj8wFIGzWOtFEXXHZBuGB9tjEkSSJt5DiWjRyOGf2Hl5898RH+wOBfd/3pe8tI
      S7o4Eyj2GgBBbxfl1WfkuNQamZifh1Z0hos77U4/vsCFzYPWH+SLeBOh1wAI+91UVFSc/qYx
      kfy8XMSoYCEe9Hoat6SN4aab/pHLL5uBJPfcBgyFwiItihA3YuoK8fxTf8Md8KFLSuXg3n2c
      dRUsCENUbA15tZ6CgvFoJD3h7k78IZEcV4gPMfUFuvOe+8ifMIUkpYNV168myXTpPKAShAsR
      U2a4d9etQ1IbWLTqOpqO7cITEDWAEB96P5WHfbz64vOs/3gjje0eTBqFmvYAN4sObEKc6D0A
      1AZWXnsj7qDMvEUrMei0pGdlYxEjwoQ40XsAqNSkpGWweGouL77+Oja9QkLuAr5/2xWISkCI
      BzGOCNvS54gwQRiKYsoM98WIsNxkzjkiTBCGqthHhB0twx0494gwQRiqem8CdTv46QN/RKXR
      M6FoGrNnTcMmzv5CHOmjBlDobqvh2Wef/eotk51bb7hWzBUgxIW+xwMYEpg9e/YpnzCgU4uu
      0EJ86OM5gJ7LFi2hqKio18UEYajq/VSuM3PnTf9wkYoiCBdfrzVAR+VuPqqCcOMBrr/tHpLM
      uotVLkG4KHoNAJ3Fyt61T9LQXE9tY2fPrDCWNH58711YjeIiWBj6ej2KbRkF/Omh3/Pqa6+w
      YMkqDDotFpsNk+gLJMSJ3k/jkoQ10c6iKWN58ZVXTusLJAjxQPQFEoa1fuwLpBDw+9HoTWjU
      EkpUxu1yoTFYMBl1hLt9dEfAZjFDNExIltDrxHWEMLj6py+QolBTfoiKmlomzb+KkUk6Kop3
      41Zb8bS3M33uLMqKS5CUKHnTZuM5fgj9iMlkiwAQBllMR+AXfYF6kzNhClrVF0MlZZrcYZYs
      LsLTUEp5dQOaxDTyrQFOtDQjy0YS3B3ICdliylVhUMV2ClZk9m/bRHFVEzkF01k8dzLqU1Oj
      SNIZs31EkBQ1kgQ6vZ6wWoPZ38zBzigJtgg+j49kc5QjtXomjbajKMqX6bdPdSmmR4/FpZYe
      PfblLw3ns68vVB9jgv3sPFjOnElpHOsy8p27VvPxurdx+iaSbOmtV6gONSHCCnR1uUm25zGh
      MIeuxiq6sBIONDIyO53GCi9qdSog0qMPhPNNj36p1MXns68vVO+/lMZIbpqetz/cjdxZxqOP
      PkbUmkui+fQDU1GiHD20h/LjTRw7tJfGDi+FE3LYuXUr1S4VeRk2FEWmsdPPmMw0MpO1bN1X
      ybjcrIHcNkHoUx/PAUBvsmDUKOhTskjIMDBr2gTOnN5MklQUTJlNwZRT37WyODPnlNdqiiZP
      BmBUfhGj8vtnAwThQvReA4S8rN+8m9yCQvR0kzdxIrt3bMMfvHTa5oJwIXqvAbRG0oxRdu7Y
      gaQxMz8rm4Ix2RepaIIw8PpoAmlY+q1bWBAKodXqUIlblkKciWmGGL1efzHKIggX3aVxv04Q
      BokIAGFYEwEgDGsiAIRhTQSAMKxdOp1tBKG/KTJHD3zOviPHKZy7jGn5Xz3D8nac4IP1n4ka
      QIhfcihASJ/MbbffQsmHL1DZ2dPDVAl62LK7jG/ddKsIACF+qfVm8kdnUH5oP15tGqmWnmQO
      kt7KtVevQhV2iSaQEN8CXgeNrV3o9WqCIRn0Pef8ztoS/r5mk6gBhPgV7HbgDJlYsWoV42wR
      Kpud1NZUEep28eyazfz8lz8XASDEL7VKS03p57z04stERsxmbl4ydTXVBMMKWakGXn/xv0UT
      SIhfGr2F5Vdff9p7iy/vyWl1x3d/AIjnAMIwJ2oAYUh7/sOD7Cxt+MafFwEgDGluX5A2p+8b
      f140gYRhbcBqgOaaI5TXdxJFy4J50yk7sBdnAGbNm0t30zF85jHkpJkH6usFISYDVAMoVNS1
      ctmiRRRl6amoqSdiSWd6TgINrZ3UOxXGiINfuAQMUACEiCo6NBIkJNpwB6PI7nbK6134u5oJ
      eDrZumUT1S3ugfl6QYjRAAWAFpVKJqqAz+vDmpDMjOlTyBmTid6cgFprZdHcItqaOwfm6wUh
      RgMUACpGp1n4dOtW9lU7yctKRKs3UFffSm7OKCzaAFt3lZKemTwwXy8IMRqwi+DRBdMZXXDy
      hSSBojBr7jyQJCbNmDdQXysI52XAAkCSpDPfOPe/BWEQSYqiDGpWbFmWURSFxsZGzObT7wy5
      /UHqWlwX/B2KopwdkOdp/MhkdNrTJwf8Ytedue6GdjcOT+CCvk9RokjShbVQDToN40bYz7Hu
      c++Pstp25OiFHQ79Ue6v29fnKvOF7utBD4AvdHR0kJKS0u/r/bqDtD/IsowkSQOSDr0/gvbr
      RCIRNJqBqfwHqtwDta/jvivEQB1EX6x7oNY/kOUeyPkLBnJ/DMS64z4ABtKlMhHG+RqK5R6o
      Mg+9PXEaBa+zg8rKSjrdPR2iHE5Hn58KdXtw+4IDXThQFDxdbVRWVeP29/19XoeTWCYGigR9
      OL3dF16+86EoONubqayMbVtO1dXZyUBOGhUO+vEHvtmUSkM6AMK+TvYeqiIhwUprSyvBbh/b
      t2+js8uBLEcIhMJ43G7kaBSPy0GXw0VUUZAkFSpJIhwMEgj46epyErnAi79z8bRWs/doAwk2
      Mz6vHyUq43I68Ph6LtoCgQB+jwuXx0dUjnBo+3bqOzvxB8MEgz0HWTgUICIrhAJ+Oju7CIYj
      SEioJBWKouB1O3F5fCgKhEJBAn7vye3s323xddRRUtNOgtVES0srihzC5/fR1eUgIkeJRsKE
      wmECfh/hYDddnZ34AyEUes7eEhAIdONxOfH4AvTnlae3s5ETrZ6eF4pCt9dNZ4pQnpoAAAQh
      SURBVJeDsBwFRTm5T3p+43Cwu+ffcpRoJDTUm0AKPo8Pc0IyaWkZeBxt+Hw+ujodWHHywedV
      pNlTmDM1j7qGZpSglwZrFqNMAVrkBHStldSrjNhVYeo7spiSP6JfS1d8tI6FS5ajk3rKWlWy
      B6diJuJsZeTUy6jYs4nkjBxcne2Mnzq954Dq6CBBq6PqSDlz5s2itmwvhlGzOHF4J/a0LDzB
      KJlaJ1XuBEbQQoUjilH2Ys3KJ9h6FK9iw6zy0mwvYFJOPz5oVKJ4vH4SUtJJ06gItJTxSZmX
      vFQtZdVaCrMM7DpcTdaoMaRZNDh8IRpby1myaD5lFRXMnzOHTzeuY8TYiTS3tLN46SJ0A9Cm
      V6IRGhobiEQiHDvexKzxKezcV0V6ahJo1JTu3oU9I5Vjx/VMSleGdg2gMaVw+eKplOzewZbP
      izEnpZGWlsa4cWPRqcCSMprL5k5FLUHI78Ht9dHa3n7KGnQUFBUxYfx4IoELv916pogkof3i
      N1agzSMzbfIk5swvpKb0OHpbKkVFk8hNTyGoqElLSWPs+PEk24xnrEnCqNPg9gYwm7/6v8oW
      N/NnTGH6tCKaGxpBa6awcBIFheMIdPVvPytTag6Lpo5m9/YtfF58DICRueMpKJyKIeomEo2S
      lJ1PUcF4onIEp9OJo7Udv/xV4ychLZtJkyaSYTURHIAaF3pmxoyEunG4vLS2tXCirJKCufOZ
      NGkiCeE22sImtFojzU21wBBvAimRIGGNhbkLL0Pr7SJAz0yH0aiCAtgSE5AkieaKYySMncT0
      KZMwai/eQ7hRCXrKGx0o0SihcASNEsYfknG3d2CwJwCnz8yo0UhEwlEUBaJKlGhUxt8dAEmi
      YMpsCsePpOzw0S+Xt6ijdPnDdHs9aA2GAd2WcLAbjSWFhZctwtvVBPRMByuH/QRlDSpJRUKC
      BUmC6vpmZs6axeiMs59BDPTe9ztb8EUTmTVzOolmHYnJFjranchyBFlvwqpVY7fbmTV9OgDq
      Bx988MEBLlNM/H4/JpPpvD4jh/2UlhymrqGR5JG5ZCbZUIU8HDveTGpaCrKkx241YLToqTpS
      htMbxJpoJ9lmAq0RoxoMiYnoJQjLCokJtn7dpqT0TFqrj1BdV4+sMTE2y05paSmdfh3TinKJ
      hILY7XYi4RAas5WMNAsl+w6hsSZjkXwcrTqBLGlIz8qmpaaU440djMjJI8GsRVYZyB2VTllJ
      Mc2OIEWFBUjRCBZbIhqVQjiiJjGx/7qch/1OSg6X0tDYxKi8iVglH3tLa/A4HOROLMKsBbQG
      rCY9st9JZW0jksZAVnYm0VAIu91OMNizveFgEGtSIpp+agJFwwGOHT1Gc3MLCRkj8bTW0tzh
      xmi2MnZ8AR3VR6hpaCUxbQwmxcmJxlaiGiOpiSb+P5qB8hhMcBiSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Re-open Vs IsDenied' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekday Vs %Count' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
